version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          TEST_DATABASE_URL: "postgres://postgres@127.0.0.1/mydb"

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: mydb

    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt install postgresql-client
      - run: whoami
      - restore_cache:
          key: circleci-challenge-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: circleci-challenge-{{ checksum "pom.xml" }}

      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "CREATE TABLE person

              (
                id character varying NOT null,
                name character varying(50),
                last_name character varying(50),
                age integer NOT NULL,
                CONSTRAINT person_pkey PRIMARY KEY (id),
                CONSTRAINT person_name_key UNIQUE (name)
              );"

      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "INSERT INTO person VALUES ('123456', 'Elon', 'Musk', 35);"

      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "SELECT * from person"

      - run: mvn package -Pdev
      - store_test_results:
          path: test-results

      - run: mvn clean install -Pprod -DskipTests

      - store_artifacts:
          path: ~/project/target

  deploy:
    machine:
      services:
        - docker
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            curl curl https://cli-assets.heroku.com/install.sh | sh | sh
            heroku plugins:install heroku-container-registry
            docker login --email=$HEROKU_LOGIN --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
            docker build --rm=false -t registry.heroku.com/$HEROKU_APP_NAME/web .
            docker push registry.heroku.com/$HEROKU_APP_NAME/web:latest

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master